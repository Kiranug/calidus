trigger:
- main

variables:
  dockerRegistryServiceConnection: 'myacrcred'  # The service connection name for ACR
  imageRepository: 'app1/calidusnodjs'
  containerRegistry: 'aksdevopsacr.azurecr.io'  # Your ACR URL
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  manifestsPath: 'Kube-Manifest/'
  k8sServiceConnection: 'myakscred' 
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    displayName: Build and Push Docker Image to ACR
    pool: "Default"
    steps:
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - bash: |
        echo "Contents in System Default Working Directory"; ls -R $(System.DefaultWorkingDirectory)
        echo "Before copying Contents in Build Artifact Directory"; ls -R $(Build.ArtifactStagingDirectory)
      displayName: 'Debug Variables'
      
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/Kube-Manifest'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'kube-manifest'
        publishLocation: 'Container'

- stage: DeployToAKS
  displayName: Deploy to AKS
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    displayName: Deploy to AKS using Kubernetes Manifests
    pool: "Default"
    steps:
    - checkout: self
    - bash: |
        echo "Container Registry: $(containerRegistry)"
        echo "Image Repository: $(imageRepository)"
        echo "Tag: $(tag)"
      displayName: 'Debug Variables'
      
    - task: KubernetesManifest@0
      displayName: Deploy Kubernetes Manifests to AKS
      inputs:
        kubernetesServiceConnection: $(k8sServiceConnection)
        namespace: default
        manifests: |
          $(System.DefaultWorkingDirectory)/$(manifestsPath)/*.yaml
        containers: |
          $(containerRegistry)/$(imageRepository):$(tag)
